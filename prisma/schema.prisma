// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
    provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url = env("POSTGRES_PRISMA_URL") // uses connection pooling
  directUrl = env("POSTGRES_URL_NON_POOLING") // uses a direct connection
}

model Post {
    id          Int      @id @default(autoincrement())
    name        String
    createdAt   DateTime @default(now())
    updatedAt   DateTime @updatedAt
    createdById String

    @@index([name])
}

// Necessary for Next auth
model Account {
    id                       String  @id @default(cuid())
    userId                   String
    type                     String
    provider                 String
    providerAccountId        String
    refresh_token            String? // @db.Text
    access_token             String? // @db.Text
    expires_at               Int?
    token_type               String?
    scope                    String?
    id_token                 String? // @db.Text
    session_state            String?
    user                     User    @relation(fields: [userId], references: [id], onDelete: Cascade)
    refresh_token_expires_in Int?

    @@unique([provider, providerAccountId])
}

model Session {
    id           String   @id @default(cuid())
    sessionToken String   @unique
    userId       String
    expires      DateTime
    user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model User {
    id            String    @id @default(cuid())
    name          String?
    email         String?   @unique
    password      String
    emailVerified DateTime?
    image         String?
    accounts      Account[]
    sessions      Session[]
    role          Int       @default(0)
}

// role 0 is for user and 1 is for admin

model VerificationToken {
    identifier String
    token      String   @unique
    expires    DateTime

    @@unique([identifier, token])
}

// Custom Tables
// enum SUtype{
//     U
//     U2
//     KG
//     LT
//     LTCL
//     TKH
//     M3
//     M2
//     M
//     CRT
// }
// When moving to Postgres, use Enums

model RateTable {
    id     Int    @id @default(autoincrement())

    cet    String    @unique
    desc  String
    // su  SUtype  @default(U) for migration to postgres
    su     String @default("U")
    duty   Float    @default(0)
    vat    Float    @default(0)
    lvy    Int    @default(0)
    exc    Int    @default(0)
    dov    DateTime 
    pdf    Int    @default(0)

    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt
}

model LogisticsTable {
    id       Int    @id @default(autoincrement())

    name     String   
    location String
    desc     String

    img      String 
    url      String  


    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt
}
